#!/usr/bin/env bash

# e - Custom EDITOR provider
# Uses nvim, fallback to vim, fallback to vi
#
# Supported environment variables:
# - E_DEBUG=true enable debug logging

__server="${XDG_STATE_HOME}/nvim/nvim.sock"

log() {
  echo "[e] ${1}"
}

ctrl_c() {
  log "Detected CTRL-C, removing nvim.sock"
  rm "$__server"

  local orphans
  orphans=$(
    # shellcheck disable=2009
    ps ux | grep -v grep | grep language-server
  )
  [[ -n $orphans ]] && {
    log "Possible orphan language server processes:"
    log "${orphans}"
  }
}

main() {
  ! command -v nvim >/dev/null && {
    local fallback
    fallback="vim"
    ! command -v vim >/dev/null && fallback="vi"

    [[ "$E_DEBUG" != "" ]] && log "Use fallback editor ${fallback}"
    "$fallback" "$@"
    return
  }

  local first="$1"

  local existing
  local running
  running=$(pgrep -f "nvim\.sock")
  if [ -z "$running" ]; then
    [[ "$E_DEBUG" != "" ]] && log "Not running"

    # this happens if my neovim crashes/killed without VimLeavePre
    [ -e "$__server" ] && {
      [[ "$E_DEBUG" != "" ]] && log "Removing dead nvim.sock"
      rm "$__server"
    }

  else
    # remote-expr outputs to /dev/stderr for some reason
    # 0.9.0 needs headless https://github.com/neovim/neovim/issues/22970
    # @TODO detect multiple instances and pick correct server
    # https://github.com/neovim/neovim/issues/21600
    existing=$(nvim \
      --headless \
      --server "$__server" \
      --remote-expr "execute('echo v:servername')" \
      2>&1 | xargs)
    [[ "$E_DEBUG" != "" ]] && log "Found running $existing"
  fi

  # New server, empty
  [ "$existing" != "$__server" ] && [ -z "$first" ] && {
    [[ "$E_DEBUG" != "" ]] && log "New server ${__server} with empty file"
    nvim --listen "$__server" +enew
    return
  }

  typeset -a files=()
  for file in "$@"; do
    # don't prepend PWD for absolute paths
    case "$file" in
    /*) ;;
    *) file="${PWD}/${file}" ;;
    esac
    files+=("$file")
  done

  # New server with files
  [ "$existing" != "$__server" ] && {
    [[ "$E_DEBUG" != "" ]] &&
      log "New server ${__server} (did not match ${existing}) with ${files[*]}"
    nvim --listen "$__server" "${files[@]}"
    return
  }

  # ==========================================================================
  # use existing server
  # ==========================================================================

  # 0.9.0 needs headless https://github.com/neovim/neovim/issues/22970
  nvim \
    --headless \
    --server "$__server" \
    --remote-expr "execute('DKOExternal')"

  if [ -z "$first" ]; then
    [[ "$E_DEBUG" != "" ]] && log "No file given, surface existing server"
    nvim --server "$__server" --remote-send '<C-\><C-N><Cmd>e<CR>'
    return
  fi

  [[ "$E_DEBUG" != "" ]] && log "Use server ${__server} with ${file[*]}"
  nvim --server "$__server" --remote-silent "${files[@]}"
}

trap ctrl_c INT
main "$@"
